(
    all: [
        (0x01, "OPERATION", WriteByte, ReadByte),
        (0x20, "VOUT_MODE", Illegal, Illegal),
        (0xcc, "RESTART_TIME", WriteByte, ReadByte),
        (0xd0, "PEAK_IOUT", WriteWord, ReadWord),
        (0xd1, "PEAK_VIN", WriteWord, ReadWord),
        (0xd2, "PEAK_VOUT", WriteWord, ReadWord),
        (0xd3, "PMON_CONTROL", WriteByte, ReadByte),
        (0xd4, "PMON_CONFIG", WriteWord, ReadWord),
        (0xd5, "ALERT1_CONFIG", WriteWord, ReadWord),
        (0xd6, "ALERT2_CONFIG", WriteWord, ReadWord),
        (0xd7, "PEAK_TEMPERATURE", WriteWord, ReadWord),
        (0xd8, "DEVICE_CONFIG", WriteWord, ReadWord),
        (0xd9, "POWER_CYCLE", SendByte, Illegal),
        (0xda, "PEAK_PIN", WriteWord, ReadWord),
        (0xdb, "READ_PIN_EXT", Illegal, Illegal), // Fix this
        (0xdc, "READ_EIN_EXT", Illegal, Illegal), // Fix this
        (0xf2, "HYSTERESIS_LOW", WriteWord, ReadWord),
        (0xf3, "HYSTERESIS_HIGH", WriteWord, ReadWord),
        (0xf4, "STATUS_HYSTERESIS", WriteByte, ReadByte),
        (0xf5, "STATUS_GPIO", WriteByte, ReadByte),
        (0xf6, "STRT_UP_IOUT_LIM", WriteWord, ReadWord),
    ],

    numerics: [
        ("VOUT_OV_WARN_LIMIT", RuntimeDirect, Volts),
        ("VOUT_UV_WARN_LIMIT", RuntimeDirect, Volts),
        ("IOUT_OC_WARN_LIMIT", RuntimeDirect, Amperes),
        ("OT_FAULT_LIMIT", Direct(( m: 42, b: 31871, R: -1 )), Celsius),
        ("OT_WARN_LIMIT", Direct(( m: 42, b: 31871, R: -1 )), Celsius),
        ("VIN_OV_WARN_LIMIT", RuntimeDirect, Volts),
        ("VIN_UV_WARN_LIMIT", RuntimeDirect, Volts),
        ("PIN_OP_WARN_LIMIT", RuntimeDirect, Watts),
        ("READ_VIN", RuntimeDirect, Volts),
        ("READ_VOUT", RuntimeDirect, Volts),
        ("READ_IOUT", RuntimeDirect, Amperes),
        ("READ_TEMPERATURE_1", Direct(( m: 42, b: 31871, R: -1 )), Celsius),
        ("READ_PIN", RuntimeDirect, Watts),
        ("PEAK_IOUT", RuntimeDirect, Amperes),
        ("PEAK_VIN", RuntimeDirect, Volts),
        ("PEAK_VOUT", RuntimeDirect, Volts),
        ("PEAK_TEMPERATURE", Direct(( m: 42, b: 31871, R: -1 )), Celsius),
        ("PEAK_PIN", RuntimeDirect, Watts),
        ("HYSTERESIS_LOW", Direct(( m: 1, R: 0, b: 0 )), Unitless),
        ("HYSTERESIS_HIGH", Direct(( m: 1, R: 0, b: 0 )), Unitless),
    ],

    structured: {
	// The ADM1272 regrettably doesn't support the full PMBus OPERATION
	// command (it only supports OnOffState) -- and in particular, its
	// default value of 0x80 corresponds to an illegal value for
	// MarginFaultResponse (for which only 0b01 and 0b10 are defined
	// values). To prevent interpretation of any illegal fields, we
	// therefore redefine OPERATION here to contain *only* OnOffState.
	//
        "OPERATION": {
            "OnOffState": (
                name: "On/off state",
                bits: Bit(7),
                values: Sentinels({
                    "Off": (0, "output off"),
                    "On": (1, "output on"),
                }),
            ),
	},

        "STATUS_MFR_SPECIFIC": {
            "FETHealthFault": (
                name: "FET health fault",
                bits: Bit(7),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
            "UndervoltageComparatorFault": (
                name: "UV input comparator fault output",
                bits: Bit(6),
                values: Sentinels({
                    "Above": (0b0, "above threshold"),
                    "Below": (0b1, "below threshold"),
                }),
            ),
            "OvervoltageComparatorFault": (
                name: "Overvoltage comparator fault output",
                bits: Bit(5),
                values: Sentinels({
                    "Below": (0b0, "below threshold"),
                    "Above": (0b1, "above threshold"),
                }),
            ),
            "SevereOvercurrentFault": (
                name: "Severe overcurrent fault",
                bits: Bit(4),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
            "HotswapLimitFault": (
                name: "Hot swap in limit fault",
                bits: Bit(3),
                values: Sentinels({
                    "NoFault": (0b0, "no fault"),
                    "Fault": (0b1, "fault"),
                }),
            ),
            "HotswapShutdownCause": (
                name: "Cause of last how swap shutdown",
                bits: Bitrange(High(2), Low(0)),
                values: Sentinels({
                    "Operational": (0b000, "operational"),
                    "OvertempFault": (0b001, "OT_FAULT"),
                    "OvercurrentFault": (0b010, "IOUT_OC_FAULT"),
                    "FETHealthFault": (0b011, "FET HEALTH_FAULT"),
                    "UndervoltageFault": (0b100, "VIN_UV_FAULT"),
                    "OvervoltageFault": (0b110, "VIN_OV_FAULT"),
                }),
            ),
        },

        "RESTART_TIME": {
            "RestartTime": (
                name: "Length of hot swap restart",
                bits: Bitrange(High(7), Low(0)),
                values: Sentinels({
                    "ZeroPoint1": (0x00, "0.1 seconds"),
                    "ZeroPoint2": (0x01, "0.2 seconds"),
                    "TenPoint1": (0x64, "10.1 seconds"),
                    "TwentyFivePoint6": (0xff, "25.6 seconds"),
                })
            )
        },

        "PMON_CONTROL": {
            "Convert": (
                name: "Convert enable",
                bits: Bit(0),
                values: Sentinels({
                    "NotRunning": (0b0, "monitor not running"),
                    "Sampling": (0b1, "monitor is sampling"),
                })
            )
        },

        "PMON_CONFIG": {
            "TSFilt": (
                name: "Temp sensor filter enable",
                bits: Bit(15),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "Simultaneous": (
                name: "Simultaneous Vin/Iout sampling",
                bits: Bit(14),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "PwrAvg": (
                name: "Pin averaging",
                bits: Bitrange(High(13), Low(11)),
                values: Sentinels({
                    "Disabled": (0b000, "disabled"),
                    "Avg2": (0b001, "2 samples/average"),
                    "Avg4": (0b010, "4 samples/average"),
                    "Avg8": (0b011, "8 samples/average"),
                    "Avg16": (0b100, "16 samples/average"),
                    "Avg32": (0b101, "32 samples/average"),
                    "Avg64": (0b110, "64 samples/average"),
                    "Avg128": (0b111, "128 samples/average"),
                })
            ),
            "VIAvg": (
                name: "Vin/Vout/Iout averaging",
                bits: Bitrange(High(10), Low(8)),
                values: Sentinels({
                    "Disabled": (0b000, "disabled"),
                    "Avg2": (0b001, "2 samples/average"),
                    "Avg4": (0b010, "4 samples/average"),
                    "Avg8": (0b011, "8 samples/average"),
                    "Avg16": (0b100, "16 samples/average"),
                    "Avg32": (0b101, "32 samples/average"),
                    "Avg64": (0b110, "64 samples/average"),
                    "Avg128": (0b111, "128 samples/average"),
                })
            ),
            "VRange": (
                name: "Voltage range",
                bits: Bit(5),
                values: Sentinels({
                    "Range60V": (0b0, "60V range"),
                    "Range100V": (0b1, "100V range"),
                })
            ),
            "PMonMode": (
                name: "Conversion mode",
                bits: Bit(4),
                values: Sentinels({
                    "SingleShot": (0b0, "single-shot sampling"),
                    "Continuous": (0b1, "continuous sampling"),
                })
            ),
            "Temp1Enable": (
                name: "Enable temperature sampling",
                bits: Bit(3),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInEnable": (
                name: "Enable Vin sampling",
                bits: Bit(2),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VOutEnable": (
                name: "Enable Vout sampling",
                bits: Bit(1),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "IRange": (
                name: "Vin sense range",
                bits: Bit(0),
                values: Sentinels({
                    "Range15mV": (0b0, "15 mV range"),
                    "Range30mV": (0b1, "30 mV range"),
                })
            ),
        },

        "ALERT1_CONFIG": {
            "FETHealthFault": (
                name: "FET health fault alert",
                bits: Bit(15),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "IOutOCFault": (
                name: "Iout overcurrent fault alert",
                bits: Bit(14),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInOVFault": (
                name: "Vin overvoltage fault alert",
                bits: Bit(13),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInUVFault": (
                name: "Vin undervoltage fault alert",
                bits: Bit(12),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "CMLError": (
                name: "Communications error alert",
                bits: Bit(11),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "IOutOCWarn": (
                name: "Iout overcurrent warning alert",
                bits: Bit(10),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "Hysteretic": (
                name: "Iout hysteretic warning alert",
                bits: Bit(9),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInOVWarn": (
                name: "Vin overvoltage warning alert",
                bits: Bit(8),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInUVWarn": (
                name: "Vin undervoltage warning alert",
                bits: Bit(7),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VOutOVWarn": (
                name: "Vout overvoltage warning alert",
                bits: Bit(6),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VOutUVWarn": (
                name: "Vout undervoltage warning alert",
                bits: Bit(5),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "HotswapInLimit": (
                name: "Hot swap in limit alert",
                bits: Bit(4),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "PInOPWarn": (
                name: "Pin overpower warning alert",
                bits: Bit(3),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "OTFault": (
                name: "Overtemperature fault alert",
                bits: Bit(2),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "OTWarn": (
                name: "Overtemperature warning alert",
                bits: Bit(1),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "INeg": (
                name: "Negative current detected alert",
                bits: Bit(0),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
        },

        "ALERT2_CONFIG": {
            "FETHealthFault": (
                name: "FET health fault alert",
                bits: Bit(15),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "IOutOCFault": (
                name: "Iout overcurrent fault alert",
                bits: Bit(14),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInOVFault": (
                name: "Vin overvoltage fault alert",
                bits: Bit(13),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInUVFault": (
                name: "Vin undervoltage fault alert",
                bits: Bit(12),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "CMLError": (
                name: "Communications error alert",
                bits: Bit(11),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "IOutOCWarn": (
                name: "Iout overcurrent warning alert",
                bits: Bit(10),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "Hysteretic": (
                name: "Iout hysteretic warning alert",
                bits: Bit(9),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInOVWarn": (
                name: "Vin overvoltage warning alert",
                bits: Bit(8),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VInUVWarn": (
                name: "Vin undervoltage warning alert",
                bits: Bit(7),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VOutOVWarn": (
                name: "Vout overvoltage warning alert",
                bits: Bit(6),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "VOutUVWarn": (
                name: "Vout undervoltage warning alert",
                bits: Bit(5),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "HotswapInLimit": (
                name: "Hot swap in limit alert",
                bits: Bit(4),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "PInOPWarn": (
                name: "Pin overpower warning alert",
                bits: Bit(3),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "OTFault": (
                name: "Overtemperature fault alert",
                bits: Bit(2),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "OTWarn": (
                name: "Overtemperature warning alert",
                bits: Bit(1),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
            "INeg": (
                name: "Negative current detected alert",
                bits: Bit(0),
                values: Sentinels({
                    "Disabled": (0b0, "disabled"),
                    "Enabled": (0b1, "enabled"),
                })
            ),
        },

        "DEVICE_CONFIG": {
            "RndStart": (
                name: "Random start function",
                bits: Bit(15),
                values: Sentinels({
                    "Enabled": (0b0, "enabled"),
                    "Disabled": (0b1, "disabled"),
                })
            ),
            "OCFilter": (
                name: "Severe overcurrent filter select",
                bits: Bitrange(High(14), Low(13)),
                values: Sentinels({
                    "FiveHundredNanoseconds": (0b00, "500 nanoseconds"),
                    "OneMicrosecond": (0b01, "1 microsecond"),
                    "FiveMicroseconds": (0b10, "5 microseconds"),
                    "TenMicroseconds": (0b11, "10 microseconds"),
                }),
            ),
            "FastGate": (
                name: "Fast gate overcurrent recovery",
                bits: Bit(12),
                values: Sentinels({
                    "Enabled": (0b0, "enabled"),
                    "Disabled": (0b1, "disabled"),
                })
            ),
            "FETHealth": (
                name: "FET health capabilities",
                bits: Bit(11),
                values: Sentinels({
                    "Enabled": (0b0, "enabled"),
                    "Disabled": (0b1, "disabled"),
                })
            ),
            "PowerHysterisis": (
                name: "Application of hysteresis",
                bits: Bit(10),
                values: Sentinels({
                    "Current": (0b0, "applies to current"),
                    "Power": (0b1, "applies to power"),
                })
            ),
            "GPO2Mode": (
                name: "GPO2 configuration mode",
                bits: Bitrange(High(9), Low(8)),
                values: Sentinels({
                    "Alert": (0b00, "Driven by ALERT2_CONFIG alert"),
                    "GeneralPurpose": (0b01, "General purpose output"),
                    "Source": (0b11, "Driven by ALERT2_CONFIG warning"),
                })
            ),
            "GPO2Invert": (
                name: "GPO2 invert mode",
                bits: Bit(7),
                values: Sentinels({
                    "NotInvertLow": (0b0, "Not inverted (alert) or low (GP)"),
                    "InvertHigh": (0b1, "Inverted (alert) or high (GP)"),
                })
            ),
            "GPO1Mode": (
                name: "GPO1 configuration mode",
                bits: Bitrange(High(6), Low(5)),
                values: Sentinels({
                    "Alert": (0b0, "Driven by ALERT1_CONFIG alert"),
                    "GeneralPurpose": (0b01, "General purpose output"),
                    "Convert": (0b10, "Configured as convert"),
                    "Source": (0b11, "Driven by ALERT1_CONFIG warning"),
                })
            ),
            "GPO1Invert": (
                name: "GPO1 invert mode",
                bits: Bit(4),
                values: Sentinels({
                    "NotInvertLow": (0b0, "Not inverted (alert) or low (GP)"),
                    "InvertHigh": (0b1, "Inverted (alert) or high (GP)"),
                })
            ),
            "OCTripSelect": (
                name: "Severe overcurrent threshold",
                bits: Bitrange(High(3), Low(2)),
                values: Sentinels({
                    "Percent400": (0b00, "400% hot swap OC threshold"),
                    "Percent300": (0b01, "300% hot swap OC threshold"),
                    "Percent200": (0b10, "200% hot swap OC threshold"),
                    "Percent150": (0b11, "150% hot swap OC threshold"),
                })
            ),
            "OCRetry": (
                name: "Retry after severe overcurrent",
                bits: Bit(1),
                values: Sentinels({
                    "Retry": (0b0, "retries after severe OC"),
                    "TurnOff": (0b1, "turns off after severe OC"),
                }),
            ),
            "PowerGoodSense": (
                name: "Sense of PWRGD",
                bits: Bit(0),
                values: Sentinels({
                    "ActiveHigh": (0b0, "High impedence if power good"),
                    "ActiveLow": (0b1, "Driven low if power good"),
                })
            ),
        },

        "STATUS_HYSTERESIS": {
            "IOutOCWarn": (
                name: "Iout overcurrent warning",
                bits: Bit(3),
                values: Sentinels({
                    "NoOvercurrent": (0b0, "no overcurrent detected"),
                    "Overcurrent": (0b1, "overcurrent detected"),
                }),
            ),
            "HystState": (
                name: "Hysteretic comprison output",
                bits: Bit(2),
                values: Sentinels({
                    "Low": (0b0, "comparison output low"),
                    "High": (0b1, "comparison output high"),
                }),
            ),
            "HystGTHigh": (
                name: "Hysteretic upper threshold comp",
                bits: Bit(1),
                values: Sentinels({
                    "Below": (0b0, "compared value below threshold"),
                    "Above": (0b1, "compared value above threshold"),
                }),
            ),
            "HystLTLow": (
                name: "Hysteretic lower threshold comp",
                bits: Bit(0),
                values: Sentinels({
                    "Below": (0b0, "compared value below threshold"),
                    "Above": (0b1, "compared value above threshold"),
                }),
            )
        },

        "STATUS_GPIO": {
            "GPO2High": (
                name: "GPO2 high since last read",
                bits: Bit(6),
                values: Sentinels({
                    "NotHigh": (0b0, "Pin has not been high"),
                    "High": (0b1, "Pin has been high"),
                })
            ),
            "GPO2Low": (
                name: "GPO2 low since last read",
                bits: Bit(5),
                values: Sentinels({
                    "NotLow": (0b0, "Pin has not been low"),
                    "Low": (0b1, "Pin has been low"),
                })
            ),
            "GPO2State": (
                name: "State of GPO2 pin",
                bits: Bit(4),
                values: Sentinels({
                    "Low": (0b0, "Pin low"),
                    "High": (0b1, "Pin high"),
                })
            ),
            "GPO1High": (
                name: "GPO1 high since last read",
                bits: Bit(2),
                values: Sentinels({
                    "NotHigh": (0b0, "Pin has not been high"),
                    "High": (0b1, "Pin has been high"),
                })
            ),
            "GPO1Low": (
                name: "GPO1 low since last read",
                bits: Bit(1),
                values: Sentinels({
                    "NotLow": (0b0, "Pin has not been low"),
                    "Low": (0b1, "Pin has been low"),
                })
            ),
            "GPO1State": (
                name: "State of GPO2 pin",
                bits: Bit(0),
                values: Sentinels({
                    "Low": (0b0, "Pin low"),
                    "High": (0b1, "Pin high"),
                })
            ),
        },

        "STRT_UP_IOUT_LIM": {
            "StartupIOutLimit": (
                name: "ISTART *= (val + 1)/16",
                bits: Bitrange(High(3), Low(0)),
                values: Scalar(Unsigned),
            ),
        }
    }
)
